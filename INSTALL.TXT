.. This file is written in ReStructuredText and used to generate the content of some web pages

Installation instructions for Debian based systems
==================================================

1. To get the development files::

   cd /usr/local/
   hg clone http://gridcalendar.net:8001 gridcalendar

1. Install the following packages: `python python-django python-django-registration python-django-tagging python-docutils python-dateutil python-geoip postgresql python-vobject binutils postgresql-8.3 python-psycopg2 python-setuptools python-vobject`

1. Create and edit `settings_local.py` (see an example at the end of the file `settings.py`)

1. To parse events submitted as emails to an imap server automatically, add to your cron file command::

   cd /usr/local/gridcalendar ; python /usr/local/gridcalendar/manage.py imap

1. If using Apache use something like the following as `/etc/apache2/sites-available/gridcalendar.net`::

    <VirtualHost *:80>
        ServerName gridcalendar.net
        ServerAlias www.gridcalendar.net
        DocumentRoot /var/www/gridcalendar.net
        ServerAdmin admin@example.com
    
        # Logfiles:
        CustomLog /var/log/apache2/gridcalendar.net.log combined
        ErrorLog /var/log/apache2/gridcalendar.net.error.log
        LogLevel warn
     
        Alias /robots.txt /var/www/gridcalendar.net/robots.txt
        Alias /m/ /var/www/gridcalendar.net/m/
        Alias /favicon.ico /var/www/gridcalendar.net/m/favicon.ico

        WSGIScriptAlias / /usr/local/gridcalendar/apache/django.wsgi
    
    </VirtualHost>

1. Create the necessary files or symlinks under `/var/www/gridcalendar` which are mentioned in the above configuration.

1. Don't forgett to create a file `/var/www/gridcalendar/robots.txt` for the search engines, see http://en.wikipedia.org/wiki/Robots.txt

1. If Apache is used, for development it is recommended to include the following line in `/etc/apache2/apache2.conf`. It makes the server reload every request, in order to be able to see changes immediately. Remove this in the production version::

        MaxRequestsPerChild 1
   
1. If you want to use a single `sqlite` file for storing your data:
   
   1. configure `settings_local.py` accordingly and make sure that the file is writable by the web server username (`www-data` in Debian). In the `settings_local.py` you can put something like::

        DATABASE_ENGINE   = 'sqlite3'
        DATABASE_NAME     = os.path.join(PROJECT_ROOT, 'gridcalendar.sqlite')

    1. Install the Django tables::

        $ cd /usr/local/gridcalendar/
        $ python manage.py syncdb
        ...
        You just installed Django's auth system, which means you don't have any superusers defined.
        Would you like to create one now? (yes/no): yes
        ...

    1. Configure the `django_site` table::

        cd /usr/local/gridcalendar
        sqlite3 gridcalendar.sqlite
        update django_site set domain='gridcalendar.net' where id=1 ;

1. If you want to use postgresql for storing your data:
   
   1. as root edit your `/etc/postgresql/*/main/pg_hba.conf` file to include: `local all gridcalendar md5`

    1. If you want to use postgresql, reload the configuration: `killall -HUP postgres`

    1. If you want to use postgresql, create the GridCalendar `postgres` user with a password ::

        $ su
        # su postgres
        postgres$ createuser --pwprompt gridcalendar
        Enter password for new role:
        Enter it again:
        Shall the new role be a superuser? (y/n) n
        Shall the new role be allowed to create databases? (y/n) y
        Shall the new role be allowed to create more new roles? (y/n) n

    1. If you want to use postgresql, create the gridcalendar database: ::

        postgres$ createdb -U gridcalendar -O gridcalendar gridcalendar
        Password:

    1. Install the Django tables::

        $ cd /usr/local/gridcalendar/
        $ python manage.py syncdb
        ...
        You just installed Django's auth system, which means you don't have any superusers defined.
        Would you like to create one now? (yes/no): yes
        ...

